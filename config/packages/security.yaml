security:
    encoders:
        App\Entity\Users: bcrypt
    providers:
        database:
            entity:
                class: App\Entity\Users
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            anonymous: true
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    - App\Security\TokenAuthenticator
            user_checker: App\Security\UserEnabledChecker



    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/dashboard, roles: IS_AUTHENTICATED_FULLY }
    role_hierarchy:
        ROLE_SUBADMIN: [ROLE_CLIENT]
        ROLE_ADMIN: ROLE_SUBADMIN
        ROLE_SUPERADMIN: ROLE_ADMIN
